---
- block: 
  - name: Install development tools
    yum: 
      state: latest
      name:
        - "@Development Tools" 

  - name: Install packages required for Mellanox OFED installation
    yum: 
      state: latest
      name: 
          - numactl 
          - numactl-devel 
          - libxml2-devel
          - byacc
          - environment-modules
          - python-devel
          - python-setuptools
          - gtk2
          - atk
          - cairo
          - tcl
          - tk
          - m4
          - texinfo
          - glibc-devel
          - glibc-static
          - libudev-devel
          - binutils
          - binutils-devel
          - selinux-policy-devel
          - kernel-headers
          - kernel-devel-{{ ansible_kernel }}
          - nfs-utils
          - wpa_supplicant
          - psmisc

- block: 

  - name: Check for mellanox OFED
    shell: ofed_info -n
    register: ofed_version
    ignore_errors: True

  - debug:
      msg: "MLNX OFED version {{ ofed_version }} | Requested: {{ mellanox_ofed_version }}"

  - name: Download Mellanox OFED
    get_url: url="{{ mellanox_ofed_base_url }}/MLNX_OFED-{{ mellanox_ofed_version }}/MLNX_OFED_LINUX-{{ mellanox_ofed_version }}-rhel{{ os_version }}-x86_64.tgz" dest="/tmp"
    when: ofed_version is failed or ofed_version.stdout != mellanox_ofed_version

  - name: Extract OFED
    unarchive: 
      src: /tmp/MLNX_OFED_LINUX-{{ mellanox_ofed_version }}-rhel{{ os_version }}-x86_64.tgz
      dest: /tmp/
      remote_src: yes
    when: ofed_version is failed or ofed_version.stdout != mellanox_ofed_version

  - name: Install OFED
    command: chdir="/tmp/MLNX_OFED_LINUX-{{ mellanox_ofed_version }}-rhel{{ os_version }}-x86_64" ./mlnxofedinstall --kernel {{ ansible_kernel }} --kernel-sources /usr/src/kernels/{{ ansible_kernel }} --add-kernel-support --skip-repo --skip-distro-check
    when: ofed_version is failed or ofed_version.stdout != mellanox_ofed_version

  vars: 
    os_version: "{{ ansible_distribution_version }}"


- block: 
#
# Copy the required fles
#

  - name: 
    include_vars: vars/el-7.yml 

  - debug:
      msg: "interface_name: {{ interface_name }}"

  - name: Copy /opt/oci-hpc/sbin
    copy: 
      src: files/sbin 
      dest: /opt/oci-hpc/
      mode: 0755
      group: root
      owner: root
      directory_mode:

  - name: Copy /opt/oci-hpc/bin
    copy: 
      src: files/bin 
      dest: /opt/oci-hpc/
      mode: 0755
      group: root
      owner: root
      directory_mode:

  - name: /etc/logrotate.d/wpa_supplicant
    copy: 
      src: files/logrotate.d/wpa_supplicant
      dest: /etc/logrotate.d/wpa_supplicant
      mode: 0644
      group: root
      owner: root

  - name: Install WPA certs cron script
    cron: 
      name: "update wpa certs"
      user: root
      job: "/opt/oci-hpc/sbin/update_wpa_certs.py"
      cron_file: update_wpa_certs
      minute: "*/15"

  - name: Install ifup-local symlink
    file:
      src: /opt/oci-hpc/sbin/ifup-local
      dest: /usr/sbin/ifup-local
      owner: root
      group: root
      state: link
      mode: '0755'

  - name: Install limits.conf 
    template: 
      src: "templates/limits.j2" 
      dest: "/etc/security/limits.d/50-hpc-limits.conf" 
      owner: root
      group: root
      mode: 0644

  - name: Install wpa supplicant defaults
    template: 
      src: "templates/wpa_supplicant.j2" 
      dest: "/etc/sysconfig/wpa_supplicant" 
      owner: root
      group: root
      mode: 0644

  - name: Install dat.conf
    template: 
      src: "templates/dat.j2" 
      dest: "/etc/dat.conf" 
      owner: root
      group: root
      mode: 0644

